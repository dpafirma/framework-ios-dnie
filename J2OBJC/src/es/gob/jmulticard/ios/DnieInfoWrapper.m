//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/ios/DnieInfoWrapper.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/asn1/icao/AdditionalPersonalDetails.h"
#include "es/gob/jmulticard/asn1/icao/Com.h"
#include "es/gob/jmulticard/asn1/icao/OptionalDetails.h"
#include "es/gob/jmulticard/asn1/icao/SubjectFacePhoto.h"
#include "es/gob/jmulticard/asn1/icao/SubjectSignaturePhoto.h"
#include "es/gob/jmulticard/card/icao/Gender.h"
#include "es/gob/jmulticard/card/icao/MrtdLds1.h"
#include "es/gob/jmulticard/card/icao/Mrz.h"
#include "es/gob/jmulticard/ios/DnieInfo.h"
#include "es/gob/jmulticard/ios/DnieInfoWrapper.h"
#include "es/gob/jmulticard/ios/ErrorCode.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/ios/DnieInfoWrapper must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardIosDnieInfoWrapper () {
 @public
  jint errorCode_;
  NSString *errorMessage_;
  id<EsGobJmulticardCardIcaoMrtdLds1> dnie_;
  EsGobJmulticardIosDnieInfo *dnieInfo_;
}

+ (EsGobJmulticardIosDnieInfo *)readInfoWithEsGobJmulticardAsn1IcaoCom:(EsGobJmulticardAsn1IcaoCom *)com
                                   withEsGobJmulticardCardIcaoMrtdLds1:(id<EsGobJmulticardCardIcaoMrtdLds1>)dnie3;

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardIosDnieInfoWrapper, errorMessage_, NSString *)
J2OBJC_FIELD_SETTER(EsGobJmulticardIosDnieInfoWrapper, dnie_, id<EsGobJmulticardCardIcaoMrtdLds1>)
J2OBJC_FIELD_SETTER(EsGobJmulticardIosDnieInfoWrapper, dnieInfo_, EsGobJmulticardIosDnieInfo *)

inline NSString *EsGobJmulticardIosDnieInfoWrapper_get_DOC_TYPE_ID1(void);
static NSString *EsGobJmulticardIosDnieInfoWrapper_DOC_TYPE_ID1 = @"DOC_TYPE_ID1";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardIosDnieInfoWrapper, DOC_TYPE_ID1, NSString *)

inline NSString *EsGobJmulticardIosDnieInfoWrapper_get_DOC_VARIANT(void);
static NSString *EsGobJmulticardIosDnieInfoWrapper_DOC_VARIANT = @"Tarjeta de identidad";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardIosDnieInfoWrapper, DOC_VARIANT, NSString *)

__attribute__((unused)) static EsGobJmulticardIosDnieInfo *EsGobJmulticardIosDnieInfoWrapper_readInfoWithEsGobJmulticardAsn1IcaoCom_withEsGobJmulticardCardIcaoMrtdLds1_(EsGobJmulticardAsn1IcaoCom *com, id<EsGobJmulticardCardIcaoMrtdLds1> dnie3);

@interface EsGobJmulticardIosDnieInfoWrapper_UnknownCardException : JavaLangException

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException)

/*!
 @brief Serial Id.
 */
inline jlong EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_get_serialVersionUID(void);
#define EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_serialVersionUID 6786863127918537373LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException, serialVersionUID, jlong)

__attribute__((unused)) static void EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException *self);

__attribute__((unused)) static EsGobJmulticardIosDnieInfoWrapper_UnknownCardException *new_EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobJmulticardIosDnieInfoWrapper_UnknownCardException *create_EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/ios/DnieInfoWrapper.java"


#line 21
@implementation EsGobJmulticardIosDnieInfoWrapper


#line 37
- (instancetype)initWithEsGobJmulticardCardIcaoMrtdLds1:(id<EsGobJmulticardCardIcaoMrtdLds1>)mrtdLds1 {
  EsGobJmulticardIosDnieInfoWrapper_initWithEsGobJmulticardCardIcaoMrtdLds1_(self, mrtdLds1);
  return self;
}


#line 49
- (instancetype)initWithInt:(jint)errorCode
               withNSString:(NSString *)errorMessage {
  EsGobJmulticardIosDnieInfoWrapper_initWithInt_withNSString_(self, errorCode, errorMessage);
  return self;
}


#line 59
- (jboolean)isError {
  return self->errorCode_ == -1;
}


#line 67
- (EsGobJmulticardIosDnieInfo *)getDnieInfo {
  
#line 69
  if (self->dnieInfo_ != nil) {
    return self->dnieInfo_;
  }
  
#line 73
  if (self->dnie_ == nil) {
    return nil;
  }
  
#line 77
  @try {
    EsGobJmulticardAsn1IcaoCom *com = [self->dnie_ getCom];
    self->dnieInfo_ = EsGobJmulticardIosDnieInfoWrapper_readInfoWithEsGobJmulticardAsn1IcaoCom_withEsGobJmulticardCardIcaoMrtdLds1_(com, self->dnie_);
  }
  @catch (EsGobJmulticardIosDnieInfoWrapper_UnknownCardException *e) {
    self->errorCode_ = EsGobJmulticardIosErrorCode_INVALID_CARD;
    self->errorMessage_ = @"La tarjeta detectada no es un DNI soportado";
  }
  @catch (JavaLangException *e) {
    self->errorCode_ = EsGobJmulticardIosErrorCode_INACCESIBLE_INFO;
    self->errorMessage_ = @"No se ha podido leer la informacion de los ficheros del DNIe";
  }
  
#line 90
  return self->dnieInfo_;
}


#line 93
+ (EsGobJmulticardIosDnieInfo *)readInfoWithEsGobJmulticardAsn1IcaoCom:(EsGobJmulticardAsn1IcaoCom *)com
                                   withEsGobJmulticardCardIcaoMrtdLds1:(id<EsGobJmulticardCardIcaoMrtdLds1>)dnie3 {
  return EsGobJmulticardIosDnieInfoWrapper_readInfoWithEsGobJmulticardAsn1IcaoCom_withEsGobJmulticardCardIcaoMrtdLds1_(com, dnie3);
}


#line 184
- (jint)getErrorCode {
  return self->errorCode_;
}


#line 192
- (NSString *)getErrorMessage {
  return self->errorMessage_;
}


#line 200
- (IOSByteArray *)getAtr {
  
#line 202
  IOSByteArray *atr = nil;
  if (self->dnie_ != nil) {
    @try {
      atr = [self->dnie_ getAtrInfo];
    }
    @catch (
#line 206
    JavaIoIOException *e) {
      self->errorCode_ = EsGobJmulticardIosErrorCode_INACCESIBLE_INFO;
      self->errorMessage_ = @"No se encontro o no se pudo leer el fichero con ATR de la tarjeta";
    }
  }
  else {
    self->errorCode_ = EsGobJmulticardIosErrorCode_NOT_INITIALIZED;
    self->errorMessage_ = @"No se inicio la conexion con la tarjeta";
  }
  return atr;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardIosDnieInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardIosDnieInfo;", 0xa, 2, 3, 4, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithEsGobJmulticardCardIcaoMrtdLds1:);
  methods[1].selector = @selector(initWithInt:withNSString:);
  methods[2].selector = @selector(isError);
  methods[3].selector = @selector(getDnieInfo);
  methods[4].selector = @selector(readInfoWithEsGobJmulticardAsn1IcaoCom:withEsGobJmulticardCardIcaoMrtdLds1:);
  methods[5].selector = @selector(getErrorCode);
  methods[6].selector = @selector(getErrorMessage);
  methods[7].selector = @selector(getAtr);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DOC_TYPE_ID1", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "DOC_VARIANT", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "errorCode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "errorMessage_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dnie_", "LEsGobJmulticardCardIcaoMrtdLds1;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "dnieInfo_", "LEsGobJmulticardIosDnieInfo;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardCardIcaoMrtdLds1;", "ILNSString;", "readInfo", "LEsGobJmulticardAsn1IcaoCom;LEsGobJmulticardCardIcaoMrtdLds1;", "LJavaIoIOException;LEsGobJmulticardIosDnieInfoWrapper_UnknownCardException;", &EsGobJmulticardIosDnieInfoWrapper_DOC_TYPE_ID1, &EsGobJmulticardIosDnieInfoWrapper_DOC_VARIANT, "LEsGobJmulticardIosDnieInfoWrapper_UnknownCardException;" };
  static const J2ObjcClassInfo _EsGobJmulticardIosDnieInfoWrapper = { "DnieInfoWrapper", "es.gob.jmulticard.ios", ptrTable, methods, fields, 7, 0x1, 8, 6, -1, 7, -1, -1, -1 };
  return &_EsGobJmulticardIosDnieInfoWrapper;
}

@end


#line 37
void EsGobJmulticardIosDnieInfoWrapper_initWithEsGobJmulticardCardIcaoMrtdLds1_(EsGobJmulticardIosDnieInfoWrapper *self, id<EsGobJmulticardCardIcaoMrtdLds1> mrtdLds1) {
  NSObject_init(self);
  self->dnieInfo_ =
#line 31
  nil;
  
#line 38
  self->dnie_ = mrtdLds1;
  self->errorCode_ = -1;
  self->errorMessage_ = nil;
}


#line 37
EsGobJmulticardIosDnieInfoWrapper *new_EsGobJmulticardIosDnieInfoWrapper_initWithEsGobJmulticardCardIcaoMrtdLds1_(id<EsGobJmulticardCardIcaoMrtdLds1> mrtdLds1) {
  J2OBJC_NEW_IMPL(EsGobJmulticardIosDnieInfoWrapper, initWithEsGobJmulticardCardIcaoMrtdLds1_, mrtdLds1)
}


#line 37
EsGobJmulticardIosDnieInfoWrapper *create_EsGobJmulticardIosDnieInfoWrapper_initWithEsGobJmulticardCardIcaoMrtdLds1_(id<EsGobJmulticardCardIcaoMrtdLds1> mrtdLds1) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardIosDnieInfoWrapper, initWithEsGobJmulticardCardIcaoMrtdLds1_, mrtdLds1)
}


#line 49
void EsGobJmulticardIosDnieInfoWrapper_initWithInt_withNSString_(EsGobJmulticardIosDnieInfoWrapper *self, jint errorCode, NSString *errorMessage) {
  NSObject_init(self);
  self->dnieInfo_ =
#line 31
  nil;
  
#line 50
  self->dnie_ = nil;
  self->errorCode_ = errorCode;
  self->errorMessage_ = errorMessage;
}


#line 49
EsGobJmulticardIosDnieInfoWrapper *new_EsGobJmulticardIosDnieInfoWrapper_initWithInt_withNSString_(jint errorCode, NSString *errorMessage) {
  J2OBJC_NEW_IMPL(EsGobJmulticardIosDnieInfoWrapper, initWithInt_withNSString_, errorCode, errorMessage)
}


#line 49
EsGobJmulticardIosDnieInfoWrapper *create_EsGobJmulticardIosDnieInfoWrapper_initWithInt_withNSString_(jint errorCode, NSString *errorMessage) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardIosDnieInfoWrapper, initWithInt_withNSString_, errorCode, errorMessage)
}


#line 93
EsGobJmulticardIosDnieInfo *EsGobJmulticardIosDnieInfoWrapper_readInfoWithEsGobJmulticardAsn1IcaoCom_withEsGobJmulticardCardIcaoMrtdLds1_(EsGobJmulticardAsn1IcaoCom *com, id<EsGobJmulticardCardIcaoMrtdLds1> dnie3) {
  EsGobJmulticardIosDnieInfoWrapper_initialize();
  
#line 96
  EsGobJmulticardIosDnieInfo *info = new_EsGobJmulticardIosDnieInfo_init();
  
#line 98
  JavaTextSimpleDateFormat *formatter = new_JavaTextSimpleDateFormat_initWithNSString_(@"dd/MM/yyyy");
  {
    IOSObjectArray *a__ = [((EsGobJmulticardAsn1IcaoCom *) nil_chk(com)) getPresentDgs];
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *dg = *b__++;
      {
        
#line 103
        EsGobJmulticardCardIcaoMrz *dg1;
        
#line 140
        EsGobJmulticardAsn1IcaoSubjectFacePhoto *dg2;
        
#line 146
        EsGobJmulticardAsn1IcaoSubjectSignaturePhoto *dg7;
        
#line 152
        EsGobJmulticardAsn1IcaoAdditionalPersonalDetails *dg11;
        
#line 160
        EsGobJmulticardAsn1IcaoOptionalDetails *dg13;
        
#line 101
        switch (JreIndexOfStr(dg, (id[]){
#line 102
          @"DG1",
#line 139
          @"DG2",
#line 145
          @"DG7",
#line 151
          @"DG11",
#line 159
          @"DG13" }, 5)) {
            
#line 102
            case 0:
            dg1 = [((id<EsGobJmulticardCardIcaoMrtdLds1>) nil_chk(dnie3)) getDg1];
            if (dg1 != nil) {
              
#line 106
              NSString *docType = [dg1 getDocumentType] != nil ? [((EsGobJmulticardCardIcaoMrz_IcaoDocumentType *) nil_chk([dg1 getDocumentType])) description] : nil;
              NSString *docVariant = [dg1 getDocumentVariant] != nil ? [((EsGobJmulticardCardIcaoMrz_IcaoDocumentVariant *) nil_chk([dg1 getDocumentVariant])) description] : nil;
              if (![((NSString *) nil_chk(EsGobJmulticardIosDnieInfoWrapper_DOC_TYPE_ID1)) isEqual:docType] || ![((NSString *) nil_chk(EsGobJmulticardIosDnieInfoWrapper_DOC_VARIANT)) isEqual:docVariant]) {
                @throw new_EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init();
              }
              
#line 115
              if ([info getName] == nil) {
                [info setNameWithNSString:[dg1 getName]];
              }
              if ([info getSurname] == nil) {
                [info setSurnameWithNSString:[dg1 getSurname]];
              }
              
#line 122
              [info setDocNumberWithNSString:[dg1 getDocumentNumber]];
              @try {
                
#line 125
                [info setDateOfBirthWithNSString:[formatter formatWithJavaUtilDate:[dg1 getDateOfBirth]]];
              }
              @catch (
#line 126
              JavaTextParseException *e) {
              }
              
#line 129
              @try {
                [info setDateOfExpiryWithNSString:[formatter formatWithJavaUtilDate:[dg1 getDateOfExpiry]]];
              }
              @catch (
#line 131
              JavaTextParseException *e) {
              }
              
#line 134
              [info setGenderWithNSString:[dg1 getSex] != nil ? [((EsGobJmulticardCardIcaoGender *) nil_chk([dg1 getSex])) description] : nil];
              [info setDniNumberWithNSString:[dg1 getSubjectNumber]];
              [info setNationalityWithNSString:[dg1 getNationality]];
            }
            break;
            case 1:
            dg2 = [((id<EsGobJmulticardCardIcaoMrtdLds1>) nil_chk(dnie3)) getDg2];
            if (dg2 != nil) {
              [info setFacePhotoWithByteArray:[dg2 getSubjectPhotoAsJpeg2k]];
            }
            break;
            case 2:
            dg7 = [((id<EsGobJmulticardCardIcaoMrtdLds1>) nil_chk(dnie3)) getDg7];
            if (dg7 != nil) {
              [info setSignaturePhotoWithByteArray:[dg7 getSubjectSignaturePhotoAsJpeg2k]];
            }
            break;
            case 3:
            dg11 = [((id<EsGobJmulticardCardIcaoMrtdLds1>) nil_chk(dnie3)) getDg11];
            if (dg11 != nil) {
              [info setResidenceAddressWithNSString:[dg11 getResidenceAddress]];
              [info setResidenceCityWithNSString:[dg11 getResidenceCity]];
              [info setResidenceProvinceWithNSString:[dg11 getResidenceProvince]];
            }
            break;
            case 4:
            dg13 = [((id<EsGobJmulticardCardIcaoMrtdLds1>) nil_chk(dnie3)) getDg13];
            if (dg13 != nil) {
              [info setBirthCityWithNSString:[dg13 getBirthCity]];
              [info setBirthProvinceWithNSString:[dg13 getBirthProvince]];
              [info setBirthCountryWithNSString:[dg13 getBirthCountry]];
              [info setNameWithNSString:[dg13 getName]];
              [info setSurnameWithNSString:JreStrcat("$$", [dg13 getFirstSurname],
#line 167
              ([dg13 getSecondSurname] != nil ? JreStrcat("C$", ' ',
#line 168
              [dg13 getSecondSurname]) : @""))];
            }
            break;
            default:
            break;
          }
        }
      }
    }
    
#line 176
    return info;
  }

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardIosDnieInfoWrapper)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/ios/DnieInfoWrapper.java"


#line 218
@implementation EsGobJmulticardIosDnieInfoWrapper_UnknownCardException

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 223
- (instancetype)init {
  EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardIosDnieInfoWrapper;" };
  static const J2ObjcClassInfo _EsGobJmulticardIosDnieInfoWrapper_UnknownCardException = { "UnknownCardException", "es.gob.jmulticard.ios", ptrTable, methods, fields, 7, 0xa, 1, 1, 0, -1, -1, -1, -1 };
  return &_EsGobJmulticardIosDnieInfoWrapper_UnknownCardException;
}

@end


#line 223
void EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException *self) {
  JavaLangException_init(self);
}


#line 223
EsGobJmulticardIosDnieInfoWrapper_UnknownCardException *new_EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException, init)
}


#line 223
EsGobJmulticardIosDnieInfoWrapper_UnknownCardException *create_EsGobJmulticardIosDnieInfoWrapper_UnknownCardException_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardIosDnieInfoWrapper_UnknownCardException)
