//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/ios/DnieInfoWrapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardIosDnieInfoWrapper")
#ifdef RESTRICT_EsGobJmulticardIosDnieInfoWrapper
#define INCLUDE_ALL_EsGobJmulticardIosDnieInfoWrapper 0
#else
#define INCLUDE_ALL_EsGobJmulticardIosDnieInfoWrapper 1
#endif
#undef RESTRICT_EsGobJmulticardIosDnieInfoWrapper

#if !defined (EsGobJmulticardIosDnieInfoWrapper_) && (INCLUDE_ALL_EsGobJmulticardIosDnieInfoWrapper || defined(INCLUDE_EsGobJmulticardIosDnieInfoWrapper))
#define EsGobJmulticardIosDnieInfoWrapper_

@class EsGobJmulticardIosDnieInfo;
@class IOSByteArray;
@protocol EsGobJmulticardCardIcaoMrtdLds1;

/*!
 @brief Envoltura de la clase Dnie para la realizaci&oacute;n de operaciones de firma.
 Cada uno de los m&eacute;todos de la clase devolver&aacute; un valor por defecto en caso de
  producirse un error y se podr&aacute; consultar el error concreto a trac&eacute;s de los
  m&eacute;todos <code>getErrorCode</code> y <code>getErrorMessage</code>.
 */
@interface EsGobJmulticardIosDnieInfoWrapper : NSObject

#pragma mark Public

/*!
 @brief Devuelve el ATR de la tarjeta.
 @return ATR de la tarjeta.
 */
- (IOSByteArray *)getAtr;

/*!
 @brief Recupera la informaci&oacute;n del usuario del DNIe.
 @return Informaci&oacute;n del usuario o <code>null</code> si ocurri&oacute; un error en la lectura.
 */
- (EsGobJmulticardIosDnieInfo *)getDnieInfo;

/*!
 @brief Recupera el c&oacute;digo de error.
 @return C&oacute;digo de error o <code>-1</code> si no ocurri&oacute; ning&uacute;n error.
 - seealso: ErrorCodeErrorCode: Clase con los c&oacute;digos de error.
 */
- (jint)getErrorCode;

/*!
 @brief Recupera el mensaje de error.
 @return Mensaje de error o <code>null</code> si no ocurri&oacute; ning&uacute;n error.
 */
- (NSString *)getErrorMessage;

/*!
 @brief Identifica si la operaci&oacute;n fall&oacute;.
 @return <code>true</code> si el resultado es un error, <code>false</code> en caso contrario.
 */
- (jboolean)isError;

#pragma mark Package-Private

/*!
 @brief Compone el envoltorio con el error que se detecto en la conexi&oacute;n.
 @param errorCode C &oacute; digo de error.
 @param errorMessage Mensaje de error.
 - seealso: ErrorCodeErrorCode: Clase con los c&oacute;digos de error.
 */
- (instancetype)initWithInt:(jint)errorCode
               withNSString:(NSString *)errorMessage;

/*!
 @brief Compone el envoltorio con la tarjeta a la que se ha conectado.
 @param mrtdLds1 Tarjeta inteligente ICAO.
 */
- (instancetype)initWithEsGobJmulticardCardIcaoMrtdLds1:(id<EsGobJmulticardCardIcaoMrtdLds1>)mrtdLds1;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardIosDnieInfoWrapper)

FOUNDATION_EXPORT void EsGobJmulticardIosDnieInfoWrapper_initWithEsGobJmulticardCardIcaoMrtdLds1_(EsGobJmulticardIosDnieInfoWrapper *self, id<EsGobJmulticardCardIcaoMrtdLds1> mrtdLds1);

FOUNDATION_EXPORT EsGobJmulticardIosDnieInfoWrapper *new_EsGobJmulticardIosDnieInfoWrapper_initWithEsGobJmulticardCardIcaoMrtdLds1_(id<EsGobJmulticardCardIcaoMrtdLds1> mrtdLds1) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardIosDnieInfoWrapper *create_EsGobJmulticardIosDnieInfoWrapper_initWithEsGobJmulticardCardIcaoMrtdLds1_(id<EsGobJmulticardCardIcaoMrtdLds1> mrtdLds1);

FOUNDATION_EXPORT void EsGobJmulticardIosDnieInfoWrapper_initWithInt_withNSString_(EsGobJmulticardIosDnieInfoWrapper *self, jint errorCode, NSString *errorMessage);

FOUNDATION_EXPORT EsGobJmulticardIosDnieInfoWrapper *new_EsGobJmulticardIosDnieInfoWrapper_initWithInt_withNSString_(jint errorCode, NSString *errorMessage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardIosDnieInfoWrapper *create_EsGobJmulticardIosDnieInfoWrapper_initWithInt_withNSString_(jint errorCode, NSString *errorMessage);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardIosDnieInfoWrapper)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardIosDnieInfoWrapper")
